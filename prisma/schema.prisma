// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String @id @default(uuid())
  name        String @unique
  description String?
  price       Float
  inStock     Int     @map("in_stock")
  isAvailable Boolean @default(true) @map("is_avalaible")
  category    Category
  tags        String[]

  orderItem OrderItem[]//one-to-many
  models Model[] @relation("product_models")//many-to-many

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("products")
}

model User {
  id String @id @default(uuid())
  email String @unique

  profile Profile? //One-to-One
  order Order[] //One-to-Many
  


  @@map("users")
}

model Model {
  id String @id @default(uuid())
  name String @unique

  products Product[] @relation("product_models")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("models")
}

model Profile {
  id String @id @default(uuid())
  avatarUrl String? @map("avatar_url")

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("profiles")
}

model Order {
  id String @id @default(uuid())
  total Float 

  userId String 
  user   User   @relation(fields: [userId], references: [id])
  orderItem OrderItem[]//many-to-one

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("orders")
}

model OrderItem {
  orderId String
  productId String
  quantity Float

  order Order @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@id([orderId, productId])
  @@map("order_Items")
}

enum Category {
  FOOD
  ELETRONICS
  HOME
  OTHER
}